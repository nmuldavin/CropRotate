!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var t=n();for(var r in t)("object"==typeof exports?exports:e)[r]=t[r]}}(this,function(){return function(e){function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}var t={};return n.m=e,n.c=t,n.i=function(e){return e},n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p="",n(n.s=0)}([function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=n.loadImage=function(e){return new Promise(function(n,t){var r=new Image;Object.assign(r,{src:e,onload:function(){n(r)},onerror:function(){t(new Error("Image not found"))}})})},o=function(e){return e instanceof HTMLCanvasElement},f=function(e){var n=document.getElementById(e);if(!n)throw new Error("Referenced element not found");if(!o)throw new Error("Referenced element is not a canvas");return n.width=n.offsetWidth,n.height=n.offsetHeight,n},i=function(e,n){return r(e).then(function(e){var t=f(n);t.getContext("2d").drawImage(e,0,0,t.width,t.height)})};n.default=i}])});